name: Build Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
        cache: 'pip'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Install Visual Studio Build Tools
      run: |
        choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended"
      shell: pwsh

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install requests==2.32.3
        pip install betterproto==2.0.0b6
        pip install websocket-client==1.7.0
        pip install mini_racer==0.12.4
        pip install edge_tts==7.0.0
        pip install playsound==1.2.2
        pip install sounddevice==0.5.1
        pip install soundfile==0.12.1
        pip install pyinstaller
      shell: pwsh

    - name: Create msic directory
      run: mkdir -p msic
      shell: pwsh

    - name: Build with PyInstaller
      run: |
        pyinstaller --noconfirm --onefile --windowed `
          --add-data "sign.js;." `
          --add-data "sign_v0.js;." `
          --add-data "msic;msic" `
          --add-data "protobuf;protobuf" `
          --hidden-import=playsound `
          --hidden-import=edge_tts `
          --hidden-import=sounddevice `
          --hidden-import=soundfile `
          --hidden-import=mini_racer `
          --hidden-import=edge_tts.constants `
          --hidden-import=edge_tts.exceptions `
          --hidden-import=edge_tts.communicate `
          main.py
      shell: pwsh

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: DouyinLiveTTS-windows
        path: |
          dist/*
        if-no-files-found: error

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 