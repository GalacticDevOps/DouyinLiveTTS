name: Build Application

on:
  push:
    branches: [ main ]
    tags:
      - 'v*' # 触发标签格式为 v开头,如 v1.0.0
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
        cache: 'pip'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Install Visual Studio Build Tools
      run: |
        choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended"
      shell: pwsh

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install requests==2.32.3
        pip install betterproto==2.0.0b6
        pip install websocket-client==1.7.0
        pip install mini_racer==0.12.4
        pip install edge_tts==7.0.0
        pip install playsound==1.2.2
        pip install sounddevice==0.5.1
        pip install soundfile==0.12.1
        pip install pyinstaller
      shell: pwsh

    - name: Create msic directory
      run: mkdir -p msic
      shell: pwsh

    - name: Modify main.py for stdin
      run: |
        $content = @"
        #!/usr/bin/python
        # coding:utf-8
        from liveMan import DouyinLiveWebFetcher
        if __name__ == '__main__':
            try:
                live_id = input("请输入直播间ID号: ")
            except:
                # 如果stdin不可用，使用默认值
                live_id = ""
            DouyinLiveWebFetcher(live_id).start()
        "@
        Set-Content -Path "main.py" -Value $content -Encoding UTF8
      shell: pwsh

    - name: Get version from tag
      id: get_version
      run: |
        if ("${{ github.ref }}".StartsWith("refs/tags/")) {
          $version = "${{ github.ref }}".Replace("refs/tags/v", "")
        } else {
          $version = "dev"
        }
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Build with PyInstaller
      run: |
        pyinstaller --noconfirm --onefile --windowed `
          --name "DouyinLiveTTS-${{ steps.get_version.outputs.VERSION }}" `
          --icon "dy-dm.ico" `
          --add-data "sign.js;." `
          --add-data "sign_v0.js;." `
          --add-data "msic;msic" `
          --add-data "protobuf;protobuf" `
          --hidden-import=playsound `
          --hidden-import=edge_tts `
          --hidden-import=sounddevice `
          --hidden-import=soundfile `
          --hidden-import=mini_racer `
          --hidden-import=edge_tts.constants `
          --hidden-import=edge_tts.exceptions `
          --hidden-import=edge_tts.communicate `
          main.py
      shell: pwsh

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: DouyinLiveTTS-windows-${{ steps.get_version.outputs.VERSION }}
        path: |
          dist/*
        if-no-files-found: error

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        body: |
          DouyinLiveTTS Windows Release ${{ github.ref_name }}
          
          ### 更新内容
          - 自动构建发布
          - 增加版本号
          - 增加应用图标
          - 修复stdin问题
          
          ### 下载
          - Windows可执行文件 (版本号：${{ steps.get_version.outputs.VERSION }})
        files: |
          dist/*.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 